{
	"exclude_payload_type": false,
	"exclude_c2_profiles": false,
	"exclude_documentation_payload": false,
	"exclude_documentation_c2": false,
	"exclude_agent_icons": false
}

# Enhanced HIBP checker with multiple services
$apiKey = "APIKEY"  # Replace with your actual API key

do {
    Write-Host "`nSelect service to check:"
    Write-Host "1. Check breached accounts"
    Write-Host "2. Check stealer logs"
    $serviceChoice = Read-Host "Enter choice (1 or 2)"

    $email = Read-Host "Enter email to check"

    $headers = @{
        'hibp-api-key' = $apiKey
        'user-agent' = 'powershell'
    }

    # Set the appropriate service URL based on choice
    $baseUrl = "https://haveibeenpwned.com/api/v3"
    if ($serviceChoice -eq "1") {
        $url = "$baseUrl/breachedaccount/$email"
        Write-Host "`nChecking breached accounts for $email..."
    }
    elseif ($serviceChoice -eq "2") {
        $url = "$baseUrl/stealerlogsbyemail/$email"
        Write-Host "`nChecking stealer logs for $email..."
    }

    try {
        $response = Invoke-RestMethod -Uri $url -Headers $headers -Method Get
        if ($serviceChoice -eq "1") {
            Write-Host "Found in these breaches:"
            $response | ForEach-Object { Write-Host "- $($_.Name)" }
        }
        elseif ($serviceChoice -eq "2") {
            Write-Host "Found in these stealer logs:"
            $response | ForEach-Object { Write-Host "- $_" }
        }
    }
    catch {
        if ($_.Exception.Response.StatusCode.value__ -eq 404) {
            Write-Host "No records found for this email."
        }
        else {
            Write-Host "Error checking email: $($_.Exception.Message)"
        }
    }

    $continue = Read-Host "`nWould you like to search another email? (yes/no)"
} while ($continue.ToLower() -eq "yes" -or $continue.ToLower() -eq "y")

Write-Host "`nThank you for using the HIBP checker!"
pause
